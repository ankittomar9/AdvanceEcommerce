version: '3.8'

services:
  product-service:
    build: 
      context: ./product-service
      dockerfile: Dockerfile.dev
    container_name: product-service
    ports:
      - "8000:8000"
    networks:
      - ecommerce-network
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:password@mongodb:27017/product-service?authSource=admin&retryWrites=true&w=majority
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
    volumes:
      - ./product-service:/app
      - ~/.m2:/root/.m2  # Maven cache to speed up builds
    working_dir: /app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7.0.5
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: product-service
    volumes:
      - mongodb_data:/data/db
    command: ["--auth", "--bind_ip_all"]
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  ecommerce-network:
    driver: bridge
    name: ecommerce-network
    attachable: true

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "E:\\docker-data\\mongodb"
